{
	"name": "pl_validate_file_exists_with_failure",
	"properties": {
		"activities": [
			{
				"name": "get file metadata config",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('select \n        max(case when property_name = ''container_name'' then property_value end) container_name,\n        max(case when property_name = ''folder_name'' then property_value end) folder_name,\n        max(case when property_name = ''file_name'' then property_value end) file_name\nfrom [dbo].[etl_metadata_config] where etl_job_name = ', \n'''',pipeline().parameters.p_etl_job_name,'''')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_sqldb_sql",
						"type": "DatasetReference"
					},
					"firstRowOnly": true
				}
			},
			{
				"name": "get all files",
				"type": "GetMetadata",
				"dependsOn": [
					{
						"activity": "get file metadata config",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_txt_file",
						"type": "DatasetReference",
						"parameters": {
							"file_name": {
								"value": "@activity('get file metadata config').output.firstRow.file_name",
								"type": "Expression"
							},
							"folder_name": {
								"value": "@activity('get file metadata config').output.firstRow.folder_name",
								"type": "Expression"
							}
						}
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "DelimitedTextReadSettings"
					}
				}
			},
			{
				"name": "remove file extensions",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "get all files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('get all files').output.childItems",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "set filelist array",
							"type": "AppendVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "v_filelist",
								"value": {
									"value": "@substring(item().name,0 ,indexOf(item().name,'.'))\n",
									"type": "Expression"
								}
							}
						}
					]
				}
			},
			{
				"name": "validate all files present",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "get distinct filelist",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@variables('v_distinct_files')",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "validate data file",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_txt_file",
									"type": "DatasetReference",
									"parameters": {
										"file_name": {
											"value": "@concat(item(),'.csv')",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@activity('get file metadata config').output.firstRow.folder_name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "validate ctl file",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_txt_file",
									"type": "DatasetReference",
									"parameters": {
										"file_name": {
											"value": "@concat(item(),'.ctl')",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@activity('get file metadata config').output.firstRow.folder_name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "validate data fin file",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_txt_file",
									"type": "DatasetReference",
									"parameters": {
										"file_name": {
											"value": "@concat(item(),'.csv.fin')",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@activity('get file metadata config').output.firstRow.folder_name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "validate ctl fin file",
							"type": "GetMetadata",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "ds_txt_file",
									"type": "DatasetReference",
									"parameters": {
										"file_name": {
											"value": "@concat(item(),'.ctl.fin')",
											"type": "Expression"
										},
										"folder_name": {
											"value": "@activity('get file metadata config').output.firstRow.folder_name",
											"type": "Expression"
										}
									}
								},
								"fieldList": [
									"exists"
								],
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							}
						},
						{
							"name": "if all files exists",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "validate data file",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "validate ctl file",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "validate data fin file",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "validate ctl fin file",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@and(\r\n and(\r\n    and(\r\n        equals(activity('validate data file').output.exists,true),\r\n        equals(activity('validate data fin file').output.exists,true)\r\n        ),equals(activity('validate ctl file').output.exists,true)\r\n    ),equals(activity('validate ctl fin file').output.exists,true))",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "all files do not exists",
										"type": "SetVariable",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "v_all_files_exists",
											"value": "false"
										}
									},
									{
										"name": "fail_job",
										"type": "Fail",
										"dependsOn": [
											{
												"activity": "all files do not exists",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"message": {
												"value": "@concat('all 4 files are not available fro the feed --> ',\nitem().filename)",
												"type": "Expression"
											},
											"errorCode": "5001"
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "all_files_exists",
										"type": "SetVariable",
										"dependsOn": [],
										"policy": {
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"variableName": "v_all_files_exists",
											"value": "true"
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "do nothing",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "validate all files present",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 1
				}
			},
			{
				"name": "get distinct filelist",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "remove file extensions",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "v_distinct_files",
					"value": {
						"value": "@union(variables('v_filelist'),variables('v_filelist'))",
						"type": "Expression"
					}
				}
			}
		],
		"parameters": {
			"p_etl_job_name": {
				"type": "string",
				"defaultValue": "load_emp_file"
			}
		},
		"variables": {
			"v_all_files_exists": {
				"type": "String"
			},
			"v_filelist": {
				"type": "Array"
			},
			"v_distinct_files": {
				"type": "Array"
			}
		},
		"annotations": []
	}
}